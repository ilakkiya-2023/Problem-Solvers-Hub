{"ast":null,"code":"var _jsxFileName = \"E:\\\\FSD-FINAL-PROJECT\\\\Blog-App\\\\client\\\\src\\\\components\\\\Blogs.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import Blog from \"./Blog\";\n// function Blogs() {\n//   const [blogs, setBlogs] = useState();\n//   const sendRequest = async () => {\n//     const res = await axios\n//       .get(\"http://localhost:3001/api/blog\")\n//       .catch((err) => console.log(err));\n//     const data = await res.data;\n//     return data;\n//   };\n//   useEffect(() => {\n//     sendRequest().then((data) => setBlogs(data.blogs));\n//   }, []);\n//   return (\n//     <div>\n//       {blogs &&\n//         blogs.map((blog, index) => (\n//           <Blog\n//             key={blog._id} // Added key prop for React list rendering\n//             id={blog._id}\n//             isUser={localStorage.getItem(\"userId\") === blog.user._id}\n//             title={blog.title}\n//             content={blog.content}\n//             image={blog.image}\n//             category={blog.category} // Added category prop\n//             userName={blog.user.name}\n//           />\n//         ))}\n//     </div>\n//   );\n// }\n// export default Blogs;\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import Blog from \"./Blog\";\n// function Blogs() {\n//   const [blogs, setBlogs] = useState([]);\n//   const [error, setError] = useState(null);\n//   const sendRequest = async () => {\n//     try {\n//       const res = await axios.get(\"http://localhost:3001/api/blog\");\n//       const data = await res.data;\n//       setBlogs(data.blogs || []);\n//     } catch (err) {\n//       setError(\"Error fetching blogs\");\n//     }\n//   };\n//   useEffect(() => {\n//     sendRequest();\n//   }, []);\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n//   return (\n//     <div>\n//       {blogs.map((blog) => (\n//         <Blog\n//           key={blog._id} // Added key prop for React list rendering\n//           id={blog._id}\n//           title={blog.title}\n//           content={blog.content}\n//           image={blog.image}\n//           userName={blog.user.name}\n//         />\n//       ))}\n//     </div>\n//   );\n// }\n// export default Blogs;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Blog from \"./Blog\";\nimport { TextField, Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blogs() {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchCategory, setSearchCategory] = useState(\"\");\n\n  const sendRequest = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3001/api/blog\");\n      const data = await res.data;\n      setBlogs(data.blogs || []);\n    } catch (err) {\n      setError(\"Error fetching blogs\");\n    }\n  };\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n\n  const handleSearchChange = event => {\n    setSearchCategory(event.target.value);\n  };\n\n  const filteredBlogs = blogs.filter(blog => blog.category.toLowerCase().includes(searchCategory.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Search here..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search by Category\",\n        variant: \"outlined\",\n        value: searchCategory,\n        onChange: handleSearchChange,\n        sx: {\n          width: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), filteredBlogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      // Added key prop for React list rendering\n      id: blog._id,\n      title: blog.title,\n      content: blog.content,\n      image: blog.image,\n      userName: blog.user.name\n    }, blog._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blogs, \"Kkl2a6wr2J/OrtvVq+yapPKiNXk=\");\n\n_c = Blogs;\nexport default Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useEffect","useState","axios","Blog","TextField","Box","Typography","Blogs","blogs","setBlogs","error","setError","searchCategory","setSearchCategory","sendRequest","res","get","data","err","handleSearchChange","event","target","value","filteredBlogs","filter","blog","category","toLowerCase","includes","padding","display","justifyContent","marginBottom","width","map","_id","title","content","image","user","name"],"sources":["E:/FSD-FINAL-PROJECT/Blog-App/client/src/components/Blogs.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import Blog from \"./Blog\";\r\n\r\n// function Blogs() {\r\n//   const [blogs, setBlogs] = useState();\r\n//   const sendRequest = async () => {\r\n//     const res = await axios\r\n//       .get(\"http://localhost:3001/api/blog\")\r\n//       .catch((err) => console.log(err));\r\n\r\n//     const data = await res.data;\r\n//     return data;\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     sendRequest().then((data) => setBlogs(data.blogs));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       {blogs &&\r\n//         blogs.map((blog, index) => (\r\n//           <Blog\r\n//             key={blog._id} // Added key prop for React list rendering\r\n//             id={blog._id}\r\n//             isUser={localStorage.getItem(\"userId\") === blog.user._id}\r\n//             title={blog.title}\r\n//             content={blog.content}\r\n//             image={blog.image}\r\n//             category={blog.category} // Added category prop\r\n//             userName={blog.user.name}\r\n//           />\r\n//         ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Blogs;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import Blog from \"./Blog\";\r\n\r\n// function Blogs() {\r\n//   const [blogs, setBlogs] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const sendRequest = async () => {\r\n//     try {\r\n//       const res = await axios.get(\"http://localhost:3001/api/blog\");\r\n//       const data = await res.data;\r\n//       setBlogs(data.blogs || []);\r\n//     } catch (err) {\r\n//       setError(\"Error fetching blogs\");\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     sendRequest();\r\n//   }, []);\r\n\r\n//   if (error) {\r\n//     return <div>Error: {error}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       {blogs.map((blog) => (\r\n//         <Blog\r\n//           key={blog._id} // Added key prop for React list rendering\r\n//           id={blog._id}\r\n//           title={blog.title}\r\n//           content={blog.content}\r\n//           image={blog.image}\r\n//           userName={blog.user.name}\r\n//         />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Blogs;\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Blog from \"./Blog\";\r\nimport { TextField, Box, Typography } from \"@mui/material\";\r\n\r\nfunction Blogs() {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [searchCategory, setSearchCategory] = useState(\"\");\r\n\r\n  const sendRequest = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:3001/api/blog\");\r\n      const data = await res.data;\r\n      setBlogs(data.blogs || []);\r\n    } catch (err) {\r\n      setError(\"Error fetching blogs\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchCategory(event.target.value);\r\n  };\r\n\r\n  const filteredBlogs = blogs.filter((blog) =>\r\n    blog.category.toLowerCase().includes(searchCategory.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ padding: 3 }}>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Search here..\r\n      </Typography>\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginBottom: 3 }}>\r\n        <TextField\r\n          label=\"Search by Category\"\r\n          variant=\"outlined\"\r\n          value={searchCategory}\r\n          onChange={handleSearchChange}\r\n          sx={{ width: '50%' }}\r\n        />\r\n      </Box>\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n      {filteredBlogs.map((blog) => (\r\n        <Blog\r\n          key={blog._id} // Added key prop for React list rendering\r\n          id={blog._id}\r\n          title={blog.title}\r\n          content={blog.content}\r\n          image={blog.image}\r\n          userName={blog.user.name}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Blogs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}