{"ast":null,"code":"var _jsxFileName = \"E:\\\\FSD-FINAL-PROJECT\\\\Blog-App\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\n// import Header from \"./components/Header\";\n// import Auth from \"./components/Auth\";\n// import Blogs from \"./components/Blogs\";\n// import UserBlogs from \"./components/UserBlogs\";\n// import BlogDetail from \"./components/BlogDetail\";\n// import AddBlog from \"./components/AddBlog\";\n// import React, { useEffect } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { authActions } from \"./store\";\n// function App() {\n//   const dispatch = useDispatch();\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\n//   useEffect(() => {\n//     if (localStorage.getItem(\"userId\")) {\n//       dispatch(authActions.signin());\n//     }\n//   }, [dispatch]);\n//   return (\n//     <React.Fragment>\n//       <Header />\n//       <main>\n//         <Routes>\n//           {!isLoggedIn ? (\n//             <>\n//               <Route path=\"/auth\" element={<Auth />} />\n//               <Route path=\"/\" element={<Blogs />} />\n//             </>\n//           ) : (\n//             <>\n//               <Route path=\"/\" element={<Blogs />} />\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} /> {/* New Route for Blog Detail */}\n//             </>\n//           )}\n//         </Routes>\n//       </main>\n//     </React.Fragment>\n//   );\n// }\n// export default App;\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Auth from \"./components/Auth\";\nimport Blogs from \"./components/Blogs\";\nimport UserBlogs from \"./components/UserBlogs\";\nimport BlogDetail from \"./components/BlogDetail\";\nimport AddBlog from \"./components/AddBlog\";\nimport React, { useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"./store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n  useEffect(() => {\n    if (localStorage.getItem(\"userId\")) {\n      dispatch(authActions.signin());\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/blogs/:id\",\n            element: /*#__PURE__*/_jsxDEV(BlogDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/blogs/add\",\n            element: /*#__PURE__*/_jsxDEV(AddBlog, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myBlogs\",\n            element: /*#__PURE__*/_jsxDEV(UserBlogs, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myBlogs/:id\",\n            element: /*#__PURE__*/_jsxDEV(BlogDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/blogs/:id\",\n            element: /*#__PURE__*/_jsxDEV(BlogDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1UeP8vQEPN1o+Z4PF2Q18e5AyvA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App; // import \"./App.css\";\n// import Header from \"./components/Header\";\n// import Auth from \"./components/Auth\";\n// import Blogs from \"./components/Blogs\";\n// import UserBlogs from \"./components/UserBlogs\";\n// import BlogDetail from \"./components/BlogDetail\";\n// import AddBlog from \"./components/AddBlog\";\n// import EditBlog from \"./components/EditBlog\";\n// import NotFound from \"./components/NotFound\";\n// import React, { useEffect } from \"react\";\n// import { Route, Routes, Navigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { authActions } from \"./store\";\n// function App() {\n//   const dispatch = useDispatch();\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\n//   useEffect(() => {\n//     if (localStorage.getItem(\"userId\")) {\n//       dispatch(authActions.signin());\n//     }\n//   }, [dispatch]);\n//   return (\n//     <React.Fragment>\n//       <Header />\n//       <main>\n//         <Routes>\n//           {!isLoggedIn ? (\n//             <>\n//               <Route path=\"/auth\" element={<Auth />} />\n//               <Route path=\"/\" element={<Blogs />} />\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\n//               <Route path=\"*\" element={<Navigate to=\"/auth\" />} />\n//             </>\n//           ) : (\n//             <>\n//               <Route path=\"/\" element={<Blogs />} />\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\n//               <Route path=\"/editBlog/:id\" element={<EditBlog />} />\n//               <Route path=\"*\" element={<NotFound />} />\n//             </>\n//           )}\n//         </Routes>\n//       </main>\n//     </React.Fragment>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Auth","Blogs","UserBlogs","BlogDetail","AddBlog","React","useEffect","Route","Routes","useDispatch","useSelector","authActions","App","dispatch","isLoggedIn","state","localStorage","getItem","signin"],"sources":["E:/FSD-FINAL-PROJECT/Blog-App/client/src/App.js"],"sourcesContent":["// import \"./App.css\";\r\n// import Header from \"./components/Header\";\r\n// import Auth from \"./components/Auth\";\r\n// import Blogs from \"./components/Blogs\";\r\n// import UserBlogs from \"./components/UserBlogs\";\r\n// import BlogDetail from \"./components/BlogDetail\";\r\n// import AddBlog from \"./components/AddBlog\";\r\n// import React, { useEffect } from \"react\";\r\n// import { Route, Routes } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { authActions } from \"./store\";\r\n\r\n// function App() {\r\n//   const dispatch = useDispatch();\r\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(\"userId\")) {\r\n//       dispatch(authActions.signin());\r\n//     }\r\n//   }, [dispatch]);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Header />\r\n//       <main>\r\n//         <Routes>\r\n//           {!isLoggedIn ? (\r\n//             <>\r\n//               <Route path=\"/auth\" element={<Auth />} />\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\r\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\r\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\r\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} /> {/* New Route for Blog Detail */}\r\n//             </>\r\n//           )}\r\n//         </Routes>\r\n//       </main>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Auth from \"./components/Auth\";\r\nimport Blogs from \"./components/Blogs\";\r\nimport UserBlogs from \"./components/UserBlogs\";\r\nimport BlogDetail from \"./components/BlogDetail\";\r\nimport AddBlog from \"./components/AddBlog\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from \"./store\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"userId\")) {\r\n      dispatch(authActions.signin());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <main>\r\n        <Routes>\r\n          {!isLoggedIn ? (\r\n            <>\r\n              <Route path=\"/auth\" element={<Auth />} />\r\n              <Route path=\"/\" element={<Blogs />} />\r\n              <Route path=\"/blogs/:id\" element={<BlogDetail />} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route path=\"/\" element={<Blogs />} />\r\n              <Route path=\"/blogs/add\" element={<AddBlog />} />\r\n              <Route path=\"/myBlogs\" element={<UserBlogs />} />\r\n              <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\r\n              <Route path=\"/blogs/:id\" element={<BlogDetail />} />\r\n              \r\n            </>\r\n          )}\r\n        </Routes>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// import \"./App.css\";\r\n// import Header from \"./components/Header\";\r\n// import Auth from \"./components/Auth\";\r\n// import Blogs from \"./components/Blogs\";\r\n// import UserBlogs from \"./components/UserBlogs\";\r\n// import BlogDetail from \"./components/BlogDetail\";\r\n// import AddBlog from \"./components/AddBlog\";\r\n// import EditBlog from \"./components/EditBlog\";\r\n// import NotFound from \"./components/NotFound\";\r\n// import React, { useEffect } from \"react\";\r\n// import { Route, Routes, Navigate } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { authActions } from \"./store\";\r\n\r\n// function App() {\r\n//   const dispatch = useDispatch();\r\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(\"userId\")) {\r\n//       dispatch(authActions.signin());\r\n//     }\r\n//   }, [dispatch]);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Header />\r\n//       <main>\r\n//         <Routes>\r\n//           {!isLoggedIn ? (\r\n//             <>\r\n//               <Route path=\"/auth\" element={<Auth />} />\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\r\n//               <Route path=\"*\" element={<Navigate to=\"/auth\" />} />\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\r\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\r\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\r\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\r\n//               <Route path=\"/editBlog/:id\" element={<EditBlog />} />\r\n//               <Route path=\"*\" element={<NotFound />} />\r\n//             </>\r\n//           )}\r\n//         </Routes>\r\n//       </main>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}