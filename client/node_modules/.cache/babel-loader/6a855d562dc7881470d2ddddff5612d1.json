{"ast":null,"code":"var _jsxFileName = \"E:\\\\FSD-FINAL-PROJECT\\\\Blog-App\\\\client\\\\src\\\\App.js\";\n// import \"./App.css\";\n// import Header from \"./components/Header\";\n// import Auth from \"./components/Auth\";\n// import Blogs from \"./components/Blogs\";\n// import UserBlogs from \"./components/UserBlogs\";\n// import BlogDetail from \"./components/BlogDetail\";\n// import AddBlog from \"./components/AddBlog\";\n// import React, { useEffect } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { authActions } from \"./store\";\n// function App() {\n//   const dispatch = useDispatch();\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\n//   useEffect(() => {\n//     if (localStorage.getItem(\"userId\")) {\n//       dispatch(authActions.signin());\n//     }\n//   }, [dispatch]);\n//   return (\n//     <React.Fragment>\n//       <Header />\n//       <main>\n//         <Routes>\n//           {!isLoggedIn ? (\n//             <>\n//               <Route path=\"/auth\" element={<Auth />} />\n//               <Route path=\"/\" element={<Blogs />} />\n//             </>\n//           ) : (\n//             <>\n//               <Route path=\"/\" element={<Blogs />} />\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} /> {/* New Route for Blog Detail */}\n//             </>\n//           )}\n//         </Routes>\n//       </main>\n//     </React.Fragment>\n//   );\n// }\n// export default App;\n// import \"./App.css\";\n// import Header from \"./components/Header\";\n// import Auth from \"./components/Auth\";\n// import Blogs from \"./components/Blogs\";\n// import UserBlogs from \"./components/UserBlogs\";\n// import BlogDetail from \"./components/BlogDetail\";\n// import AddBlog from \"./components/AddBlog\";\n// import React, { useEffect } from \"react\";\n// import { Route, Routes } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { authActions } from \"./store\";\n// function App() {\n//   const dispatch = useDispatch();\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\n//   useEffect(() => {\n//     if (localStorage.getItem(\"userId\")) {\n//       dispatch(authActions.signin());\n//     }\n//   }, [dispatch]);\n//   return (\n//     <React.Fragment>\n//       <Header />\n//       <main>\n//         <Routes>\n//           {!isLoggedIn ? (\n//             <>\n//               <Route path=\"/auth\" element={<Auth />} />\n//               <Route path=\"/\" element={<Blogs />} />\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\n//             </>\n//           ) : (\n//             <>\n//               <Route path=\"/\" element={<Blogs />} />\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\n//             </>\n//           )}\n//         </Routes>\n//       </main>\n//     </React.Fragment>\n//   );\n// }\n// export default App;\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Blog from './components/Blog';\nimport EditBlog from './components/EditBlog';\nimport UserBlogs from './components/UserBlogs';\nimport Blogs from './components/Blogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blogs\",\n        element: /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/myBlogs\",\n        element: /*#__PURE__*/_jsxDEV(UserBlogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/editBlog/:id\",\n        element: /*#__PURE__*/_jsxDEV(EditBlog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Blog","EditBlog","UserBlogs","Blogs","App"],"sources":["E:/FSD-FINAL-PROJECT/Blog-App/client/src/App.js"],"sourcesContent":["// import \"./App.css\";\r\n// import Header from \"./components/Header\";\r\n// import Auth from \"./components/Auth\";\r\n// import Blogs from \"./components/Blogs\";\r\n// import UserBlogs from \"./components/UserBlogs\";\r\n// import BlogDetail from \"./components/BlogDetail\";\r\n// import AddBlog from \"./components/AddBlog\";\r\n// import React, { useEffect } from \"react\";\r\n// import { Route, Routes } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { authActions } from \"./store\";\r\n\r\n// function App() {\r\n//   const dispatch = useDispatch();\r\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(\"userId\")) {\r\n//       dispatch(authActions.signin());\r\n//     }\r\n//   }, [dispatch]);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Header />\r\n//       <main>\r\n//         <Routes>\r\n//           {!isLoggedIn ? (\r\n//             <>\r\n//               <Route path=\"/auth\" element={<Auth />} />\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\r\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\r\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\r\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} /> {/* New Route for Blog Detail */}\r\n//             </>\r\n//           )}\r\n//         </Routes>\r\n//       </main>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n// import \"./App.css\";\r\n// import Header from \"./components/Header\";\r\n// import Auth from \"./components/Auth\";\r\n// import Blogs from \"./components/Blogs\";\r\n// import UserBlogs from \"./components/UserBlogs\";\r\n// import BlogDetail from \"./components/BlogDetail\";\r\n// import AddBlog from \"./components/AddBlog\";\r\n// import React, { useEffect } from \"react\";\r\n// import { Route, Routes } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { authActions } from \"./store\";\r\n\r\n// function App() {\r\n//   const dispatch = useDispatch();\r\n//   const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(\"userId\")) {\r\n//       dispatch(authActions.signin());\r\n//     }\r\n//   }, [dispatch]);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <Header />\r\n//       <main>\r\n//         <Routes>\r\n//           {!isLoggedIn ? (\r\n//             <>\r\n//               <Route path=\"/auth\" element={<Auth />} />\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Route path=\"/\" element={<Blogs />} />\r\n//               <Route path=\"/blogs/add\" element={<AddBlog />} />\r\n//               <Route path=\"/myBlogs\" element={<UserBlogs />} />\r\n//               <Route path=\"/myBlogs/:id\" element={<BlogDetail />} />\r\n//               <Route path=\"/blogs/:id\" element={<BlogDetail />} />\r\n              \r\n//             </>\r\n//           )}\r\n//         </Routes>\r\n//       </main>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Blog from './components/Blog';\r\nimport EditBlog from './components/EditBlog';\r\nimport UserBlogs from './components/UserBlogs';\r\nimport Blogs from './components/Blogs';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/blogs\" element={<Blogs />} />\r\n        <Route path=\"/myBlogs\" element={<UserBlogs />} />\r\n        <Route path=\"/editBlog/:id\" element={<EditBlog />} />\r\n        <Route path=\"/\" element={<Blogs />} /> {/* Default route */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;EACb,oBACE,QAAC,MAAD;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,eAAZ;QAA4B,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAArC;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KAXQA,G;AAaT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}