{"ast":null,"code":"var _jsxFileName = \"E:\\\\FSD-FINAL-PROJECT\\\\Blog-App\\\\client\\\\src\\\\components\\\\Comment.js\",\n    _s = $RefreshSig$();\n\n// components/Comment.js\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Box, Button, TextField, Typography } from \"@mui/material\";\n// const Comment = ({ blogId }) => {\n//   const [comments, setComments] = useState([]);\n//   const [newComment, setNewComment] = useState(\"\");\n//   const fetchComments = async () => {\n//     try {\n//       const response = await axios.get(`http://localhost:3001/api/blog/${blogId}/comments`);\n//       setComments(response.data.comments);\n//     } catch (error) {\n//       console.log(\"Error fetching comments:\", error);\n//     }\n//   };\n//   const handleAddComment = async () => {\n//     try {\n//       const user = localStorage.getItem(\"userId\");\n//       const response = await axios.post(`http://localhost:3001/api/blog/${blogId}/comments`, {\n//         content: newComment,\n//         userId: user, // Change \"user\" to \"userId\"\n//       });\n//       setNewComment(\"\");\n//       fetchComments();\n//     } catch (error) {\n//       console.log(\"Error adding comment:\", error);\n//     }\n//   };\n//   useEffect(() => {\n//     fetchComments();\n//   }, [blogId]);\n//   return (\n//     <Box>\n//       <Typography variant=\"h6\">Comments</Typography>\n//       <Box>\n//         {comments.map((comment) => (\n//           <Typography key={comment._id}>\n//             {comment.content} - {comment.user.name}\n//           </Typography>\n//         ))}\n//       </Box>\n//       <TextField\n//         label=\"Add a comment\"\n//         value={newComment}\n//         onChange={(e) => setNewComment(e.target.value)}\n//         fullWidth\n//         multiline\n//         rows={4}\n//         variant=\"outlined\"\n//         margin=\"normal\"\n//       />\n//       <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\n//         Add Comment\n//       </Button>\n//     </Box>\n//   );\n// };\n// export default Comment;\n// import React, { useState, useEffect } from 'react';\n// import { Box, Typography, Avatar, TextField, Button } from '@mui/material';\n// import axios from 'axios';\n// const Comment = ({ postId }) => {\n//   const [comments, setComments] = useState([]);\n//   const [newComment, setNewComment] = useState(\"\");\n//   useEffect(() => {\n//     const fetchComments = async () => {\n//       try {\n//         const res = await axios.get(`http://localhost:3001/api/comments/${postId}`);\n//         setComments(res.data.comments);\n//       } catch (err) {\n//         console.log(err);\n//       }\n//     };\n//     fetchComments();\n//   }, [postId]);\n//   const handleCommentChange = (event) => {\n//     setNewComment(event.target.value);\n//   };\n//   const handleCommentSubmit = async () => {\n//     try {\n//       await axios.post(`http://localhost:3001/api/comments`, {\n//         postId,\n//         content: newComment,\n//       });\n//       setNewComment(\"\");\n//       // Refresh comments\n//       const res = await axios.get(`http://localhost:3001/api/comments/${postId}`);\n//       setComments(res.data.comments);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n//   return (\n//     <Box>\n//       <Typography variant=\"h6\">Comments</Typography>\n//       {comments.map((comment) => (\n//         <Box key={comment._id} display=\"flex\" alignItems=\"center\" marginBottom={2}>\n//           <Avatar sx={{ bgcolor: \"blue\" }}>\n//             {comment.user.name.charAt(0)}\n//           </Avatar>\n//           <Box marginLeft={2}>\n//             <Typography variant=\"body1\">{comment.user.name}</Typography>\n//             <Typography variant=\"body2\">{comment.content}</Typography>\n//           </Box>\n//         </Box>\n//       ))}\n//       <TextField\n//         label=\"Add a comment\"\n//         variant=\"outlined\"\n//         fullWidth\n//         value={newComment}\n//         onChange={handleCommentChange}\n//       />\n//       <Button variant=\"contained\" color=\"primary\" onClick={handleCommentSubmit} sx={{ marginTop: 2 }}>\n//         Post Comment\n//       </Button>\n//     </Box>\n//   );\n// };\n// export default Comment;\n// Comment.js\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Avatar, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const res = await axios.get(`http://localhost:3001/api/blog/${postId}/comments`);\n        setComments(res.data.comments);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchComments();\n  }, [postId]);\n\n  const handleCommentChange = event => {\n    setNewComment(event.target.value);\n  };\n\n  const handleCommentSubmit = async () => {\n    try {\n      await axios.post(`http://localhost:3001/api/blog/${postId}/comments`, {\n        content: newComment,\n        userId: localStorage.getItem(\"userId\") // Ensure you have user authentication in place\n\n      });\n      setNewComment(\"\"); // Refresh comments\n\n      const res = await axios.get(`http://localhost:3001/api/blog/${postId}/comments`);\n      setComments(res.data.comments);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 2,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: \"blue\"\n        },\n        children: comment.user.name.charAt(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginLeft: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: comment.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Add a comment\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: newComment,\n      onChange: handleCommentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleCommentSubmit,\n      sx: {\n        marginTop: 2\n      },\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"+OVXuOcjEFRN/kXBrT9MF+duWSc=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Avatar","TextField","Button","axios","Comment","postId","comments","setComments","newComment","setNewComment","fetchComments","res","get","data","err","console","log","handleCommentChange","event","target","value","handleCommentSubmit","post","content","userId","localStorage","getItem","map","comment","bgcolor","user","name","charAt","_id","marginTop"],"sources":["E:/FSD-FINAL-PROJECT/Blog-App/client/src/components/Comment.js"],"sourcesContent":["// components/Comment.js\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Box, Button, TextField, Typography } from \"@mui/material\";\r\n\r\n// const Comment = ({ blogId }) => {\r\n//   const [comments, setComments] = useState([]);\r\n//   const [newComment, setNewComment] = useState(\"\");\r\n\r\n//   const fetchComments = async () => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:3001/api/blog/${blogId}/comments`);\r\n//       setComments(response.data.comments);\r\n//     } catch (error) {\r\n//       console.log(\"Error fetching comments:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddComment = async () => {\r\n//     try {\r\n//       const user = localStorage.getItem(\"userId\");\r\n//       const response = await axios.post(`http://localhost:3001/api/blog/${blogId}/comments`, {\r\n//         content: newComment,\r\n//         userId: user, // Change \"user\" to \"userId\"\r\n//       });\r\n//       setNewComment(\"\");\r\n//       fetchComments();\r\n//     } catch (error) {\r\n//       console.log(\"Error adding comment:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchComments();\r\n//   }, [blogId]);\r\n\r\n//   return (\r\n//     <Box>\r\n//       <Typography variant=\"h6\">Comments</Typography>\r\n//       <Box>\r\n//         {comments.map((comment) => (\r\n//           <Typography key={comment._id}>\r\n//             {comment.content} - {comment.user.name}\r\n//           </Typography>\r\n//         ))}\r\n//       </Box>\r\n//       <TextField\r\n//         label=\"Add a comment\"\r\n//         value={newComment}\r\n//         onChange={(e) => setNewComment(e.target.value)}\r\n//         fullWidth\r\n//         multiline\r\n//         rows={4}\r\n//         variant=\"outlined\"\r\n//         margin=\"normal\"\r\n//       />\r\n//       <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\r\n//         Add Comment\r\n//       </Button>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Comment;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Box, Typography, Avatar, TextField, Button } from '@mui/material';\r\n// import axios from 'axios';\r\n\r\n// const Comment = ({ postId }) => {\r\n//   const [comments, setComments] = useState([]);\r\n//   const [newComment, setNewComment] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchComments = async () => {\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:3001/api/comments/${postId}`);\r\n//         setComments(res.data.comments);\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//       }\r\n//     };\r\n\r\n//     fetchComments();\r\n//   }, [postId]);\r\n\r\n//   const handleCommentChange = (event) => {\r\n//     setNewComment(event.target.value);\r\n//   };\r\n\r\n//   const handleCommentSubmit = async () => {\r\n//     try {\r\n//       await axios.post(`http://localhost:3001/api/comments`, {\r\n//         postId,\r\n//         content: newComment,\r\n//       });\r\n//       setNewComment(\"\");\r\n//       // Refresh comments\r\n//       const res = await axios.get(`http://localhost:3001/api/comments/${postId}`);\r\n//       setComments(res.data.comments);\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box>\r\n//       <Typography variant=\"h6\">Comments</Typography>\r\n//       {comments.map((comment) => (\r\n//         <Box key={comment._id} display=\"flex\" alignItems=\"center\" marginBottom={2}>\r\n//           <Avatar sx={{ bgcolor: \"blue\" }}>\r\n//             {comment.user.name.charAt(0)}\r\n//           </Avatar>\r\n//           <Box marginLeft={2}>\r\n//             <Typography variant=\"body1\">{comment.user.name}</Typography>\r\n//             <Typography variant=\"body2\">{comment.content}</Typography>\r\n//           </Box>\r\n//         </Box>\r\n//       ))}\r\n//       <TextField\r\n//         label=\"Add a comment\"\r\n//         variant=\"outlined\"\r\n//         fullWidth\r\n//         value={newComment}\r\n//         onChange={handleCommentChange}\r\n//       />\r\n//       <Button variant=\"contained\" color=\"primary\" onClick={handleCommentSubmit} sx={{ marginTop: 2 }}>\r\n//         Post Comment\r\n//       </Button>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Comment;\r\n\r\n// Comment.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Avatar, TextField, Button } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst Comment = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:3001/api/blog/${postId}/comments`);\r\n        setComments(res.data.comments);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const handleCommentChange = (event) => {\r\n    setNewComment(event.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:3001/api/blog/${postId}/comments`, {\r\n        content: newComment,\r\n        userId: localStorage.getItem(\"userId\")  // Ensure you have user authentication in place\r\n      });\r\n      setNewComment(\"\");\r\n      // Refresh comments\r\n      const res = await axios.get(`http://localhost:3001/api/blog/${postId}/comments`);\r\n      setComments(res.data.comments);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\">Comments</Typography>\r\n      {comments.map((comment) => (\r\n        <Box key={comment._id} display=\"flex\" alignItems=\"center\" marginBottom={2}>\r\n          <Avatar sx={{ bgcolor: \"blue\" }}>\r\n            {comment.user.name.charAt(0)}\r\n          </Avatar>\r\n          <Box marginLeft={2}>\r\n            <Typography variant=\"body1\">{comment.user.name}</Typography>\r\n            <Typography variant=\"body2\">{comment.content}</Typography>\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n      <TextField\r\n        label=\"Add a comment\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={newComment}\r\n        onChange={handleCommentChange}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleCommentSubmit} sx={{ marginTop: 2 }}>\r\n        Post Comment\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappingsgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,MAA7C,QAA2D,eAA3D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,kCAAiCP,MAAO,WAAnD,CAAlB;QACAE,WAAW,CAACI,GAAG,CAACE,IAAJ,CAASP,QAAV,CAAX;MACD,CAHD,CAGE,OAAOQ,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACD;IACF,CAPD;;IASAJ,aAAa;EACd,CAXQ,EAWN,CAACL,MAAD,CAXM,CAAT;;EAaA,MAAMY,mBAAmB,GAAIC,KAAD,IAAW;IACrCT,aAAa,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,MAAMC,mBAAmB,GAAG,YAAY;IACtC,IAAI;MACF,MAAMlB,KAAK,CAACmB,IAAN,CAAY,kCAAiCjB,MAAO,WAApD,EAAgE;QACpEkB,OAAO,EAAEf,UAD2D;QAEpEgB,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAF4D,CAE5B;;MAF4B,CAAhE,CAAN;MAIAjB,aAAa,CAAC,EAAD,CAAb,CALE,CAMF;;MACA,MAAME,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,kCAAiCP,MAAO,WAAnD,CAAlB;MACAE,WAAW,CAACI,GAAG,CAACE,IAAJ,CAASP,QAAV,CAAX;IACD,CATD,CASE,OAAOQ,GAAP,EAAY;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EACF,CAbD;;EAeA,oBACE,QAAC,GAAD;IAAA,wBACE,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGR,QAAQ,CAACqB,GAAT,CAAcC,OAAD,iBACZ,QAAC,GAAD;MAAuB,OAAO,EAAC,MAA/B;MAAsC,UAAU,EAAC,QAAjD;MAA0D,YAAY,EAAE,CAAxE;MAAA,wBACE,QAAC,MAAD;QAAQ,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAX,CAAZ;QAAA,UACGD,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAkBC,MAAlB,CAAyB,CAAzB;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,GAAD;QAAK,UAAU,EAAE,CAAjB;QAAA,wBACE,QAAC,UAAD;UAAY,OAAO,EAAC,OAApB;UAAA,UAA6BJ,OAAO,CAACE,IAAR,CAAaC;QAA1C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,UAAD;UAAY,OAAO,EAAC,OAApB;UAAA,UAA6BH,OAAO,CAACL;QAArC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA,GAAUK,OAAO,CAACK,GAAlB;MAAA;MAAA;MAAA;IAAA,QADD,CAFH,eAaE,QAAC,SAAD;MACE,KAAK,EAAC,eADR;MAEE,OAAO,EAAC,UAFV;MAGE,SAAS,MAHX;MAIE,KAAK,EAAEzB,UAJT;MAKE,QAAQ,EAAES;IALZ;MAAA;MAAA;MAAA;IAAA,QAbF,eAoBE,QAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,KAAK,EAAC,SAAlC;MAA4C,OAAO,EAAEI,mBAArD;MAA0E,EAAE,EAAE;QAAEa,SAAS,EAAE;MAAb,CAA9E;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CA9DD;;GAAM9B,O;;KAAAA,O;AAgEN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}